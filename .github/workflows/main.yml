name: Java Playwright CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    continue-on-error: true  # Allow the job to continue even if the tests fail

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java environment
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Install dependencies without running tests
      - name: Install Maven dependencies
        run: mvn install -DskipTests

      # Set up Xvfb for graphical tests
      - name: Start Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1920x1080x16 &

      # Export DISPLAY variable
      - name: Export DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      # Run Playwright tests
      - name: Run tests
        run: mvn test

      # Check if Reports directory exists
      - name: Check Reports folder
        run: ls -la Reports

      # Archive the test results
      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: Playwright-Test-Reports
          path: Reports/

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: run-tests
    if: success()  # Ensures deployment only occurs if the test job runs successfully

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy Reports to GitHub Pages
      - name: Deploy Reports
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: ./Reports
