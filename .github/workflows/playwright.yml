name: Run & Deploy Reports to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger on changes to the main branch
      - master

  workflow_dispatch:

jobs:
  run-tests:
    timeout-minutes: 60
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite: [testng.xml, testng1.xml, testng3.xml]  # List your XML suites here
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Install Dependencies
        run: mvn install -DskipTests

      - name: Set up Xvfb (for GUI applications, if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :99 &  # Start Xvfb on display :99
          export DISPLAY=:99  # Set the DISPLAY environment variable

      - name: Run Playwright Tests
        run: |
          export DISPLAY=:99  # Ensure DISPLAY is set
          mvn test -Dsurefire.suiteXmlFiles=${{ matrix.suite }}

      - name: Archive Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ always() }}  # Ensures this step runs even if tests fail
        with:
          name: Reports-${{ matrix.suite }}
          path: Reports/  # Ensure this path points to the entire Reports folder
          retention-days: 7  # Set the retention period to 7 days

  merge-reports:
    name: Merge Test Reports
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          name: Reports-*
          path: ./Reports

      - name: Merge XML Reports
        run: |
          mkdir -p MergedReports
          # Use a tool like junit-merger to combine the XML reports
          junit-merger Reports/**/*.xml > MergedReports/combined-report.xml

      - name: Convert XML to HTML
        run: |
          # Use a tool like allure or junit2html to convert XML to HTML
          junit2html MergedReports/combined-report.xml MergedReports/combined-report.html

      - name: Archive Merged Reports
        uses: actions/upload-artifact@v4
        with:
          name: MergedReports
          path: MergedReports/

  deploy-pages:
    name: Deploy Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: merge-reports
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Merged Reports
        uses: actions/download-artifact@v4
        with:
          name: MergedReports
          path: ./MergedReports

      # Copy the report to the public directory for GitHub Pages
      - name: Prepare Reports for Deployment
        run: |
          mkdir -p public
          cp -R MergedReports/* public/
          mv public/combined-report.html public/index.html  # Rename for GitHub Pages

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: ./public
          force_orphan: true
